{"version":3,"sources":["moment-holiday.js","united_states.js","easter.js"],"names":["parseHoliday","self","date","adjust","pd","days","i","parserExtensions","length","pe","moment","isMoment","charAt","match","range","dates","split","m","ds","td","ii","push","year","parseInt","month","w","slice","wd","dt","d","startOf","limit","endOf","diff","wds","forward","wi","day","add","subtract","ai","concat","di","arrayify","keywordMatches","str","kw","f","RegExp","findHoliday","holiday","parse","holidayObj","pt","wn","obj","that","h","holidays","active","hasOwnProperty","fk","findKey","hd","filter","keywords_n","keywords_y","matchesY","keywords","matches","Object","keys","findHolidays","find","merge","getAllHolidays","getLocale","locale","regions","toLowerCase","replace","shift","o","r","l","y","n","regions_n","join","indexOf","compileRegions","holidayLoop","count","b","b2","ha","hi","isSame","require","this","arr","constructor","Array","o1","o2","assign","fn","single","dKeys","isHoliday","returnTitle","hs","previousHoliday","previousHolidays","nextHoliday","nextHolidays","holidaysBetween","Date","active_last","modifyHolidays","set","specifics","newH","k","is","remove","undo","c","load","locales","extendParser","func","module","exports","call","united_states","New Year's Day","Martin Luther King Jr. Day","Valentine's Day","Washington's Birthday","Saint Patrick's Day","Good Friday","Easter Sunday","Memorial Day","Mother's Day","Father's Day","Independence Day","Labor Day","Columbus Day","Halloween","Veteran's Day","Thanksgiving Day","Day after Thanksgiving","Christmas Eve","Christmas Day","New Year's Eve","easter","Ash Wednesday","Lent","Maundy Thursday","Holy Saturday","Easter Monday","Ascension Day","Pentecost Sunday","Whit Monday","Corpus Christi","Math","floor","j","substring","e","format"],"mappings":"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","file":"moment-holiday-us.min.js","sourcesContent":["//! moment-holiday.js\n//! version : 1.5.1\n//! author : Kodie Grantham\n//! license : MIT\n//! https://github.com/kodie/moment-holiday\n\n(function() {\n  // var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\n\n  // for web to work, we need to require moment without doing all the other checks:\n  var moment = require(\"moment\");\n\n  var that = this;\n  \n  var parserExtensions = [];\n\n  var parseHoliday = function(self, date, adjust) {\n    var days = [], pd;\n\n    for (var i = 0; i < parserExtensions.length; i++) {\n      var pe = parserExtensions[i](self, date);\n      if (pe || pe === false) { pd = pe; }\n    }\n\n    if (pd === false) { return false; }\n    if (typeof pd === 'string') { date = pd; } else if (pd) { days = pd; }\n\n    if (!moment.isMoment(days) && !days.length && date.charAt(0).match(/[0-9(]/)) {\n      var range = false;\n      var dates = date.split('|');\n\n      if (dates.length > 1) { range = true; }\n      if (dates.length > 2) { dates = [dates[0], dates[1]]; }\n\n      for (var i = 0; i < dates.length; i++) {\n        var m = moment(self);\n        var ds = dates[i].split('/');\n\n        if (ds.length === 1 || (ds.length === 2 && ds[1].charAt(0) !== '(' && ds[1].length === 4)) {\n          var td = dates[i];\n          i = -1;\n          dates = [];\n          for (var ii = 1; ii < 13; ii++) { dates.push(ii + '/' + td); }\n          continue;\n        }\n\n        if (ds.length > 2) { m.year(parseInt(ds[2])); }\n\n        m.month((parseInt(ds[0]) - 1));\n\n        if (ds[1].charAt(0) === '(') {\n          var w = ds[1].slice(1, -1).split(',');\n          var wd = parseInt(w[0]);\n          var dt = parseInt(w[1]);\n          var d = moment(m).startOf('month');\n          var limit = (moment(m).endOf('month').diff(d, 'days') + 1);\n          var wds = [];\n\n          if (w[1] && w[1].charAt(0) === '[') {\n            var forward = true;\n            dt = parseInt(w[1].slice(1, -1));\n\n            if (dt < 0) {\n              forward = false;\n              dt = parseInt(w[1].slice(2, -1));\n            }\n\n            d = moment(m).date(dt);\n\n            for (var wi = 0; wi < 7; wi++) {\n              if (d.day() === wd) { days.push(moment(d)); break; }\n\n              if (forward) {\n                d.add(1, 'day');\n              } else {\n                d.subtract(1, 'day');\n              }\n            }\n\n            continue;\n          }\n\n          for (var ai = 0; ai < limit; ai++) {\n            if (d.day() === wd) { wds.push(moment(d)); }\n            d.add(1, 'day');\n          }\n\n          if (!dt) {\n            days = days.concat(wds);\n            continue;\n          } else if (dt < 0) {\n            m = wds[wds.length + dt];\n          } else {\n            m = wds[dt - 1];\n          }\n\n          days.push(m);\n        } else {\n          days.push(m.date(ds[1]));\n        }\n      }\n\n      if (range && days.length > 1) {\n        var diff = days[1].diff(days[0], 'days');\n\n        if (diff > 1) {\n          var di = moment(days[0]);\n          days = [days[0]];\n\n          for (var i = 0; i < diff; i++) {\n            di.add(1, 'day');\n            days.push(moment(di));\n          }\n        }\n      }\n    }\n\n    days = arrayify(days);\n\n    for (var i = 0; i < days.length; i++) {\n      if (!moment.isMoment(days[i])) { delete(days[i]); continue; }\n\n      if (adjust) {\n        if (days[i].day() === 0) { days[i] = days[i].add(1, 'day'); }\n        if (days[i].day() === 6) { days[i] = days[i].subtract(1, 'day'); }\n      }\n\n      days[i] = days[i].startOf('day');\n    }\n\n    if (!days.length) { return false; }\n    if (days.length === 1) { return days[0]; }\n\n    return days;\n  };\n\n  var keywordMatches = function(str, kw) {\n    var m = [];\n    kw = arrayify(kw);\n\n    for (var i = 0; i < kw.length; i++) {\n      var f = str.match(new RegExp(kw[i], 'gi'));\n      if (f) { m = m.concat(f); }\n    }\n\n    return m;\n  };\n\n  var findHoliday = function(self, holiday, adjust, parse, holidayObj) {\n    var pt = {};\n    var wn = [];\n    var obj = {};\n\n    that.h = holidayObj || moment.holidays.active;\n\n    if (that.h.hasOwnProperty(holiday)) {\n      wn.push(holiday);\n    } else if (fk = findKey(holiday, that.h)) {\n      wn.push(fk);\n    } else {\n      for (var hd in that.h) {\n        if (!that.h.hasOwnProperty(hd)) { continue; }\n\n        pt[hd] = keywordMatches(holiday, hd.split(/[\\s,.-]+/).filter(function(w){ return w.length > 2; })).length;\n\n        if (that.h[hd].keywords_n) {\n          var matchesN = keywordMatches(holiday, that.h[hd].keywords_n);\n          if (matchesN.length) {\n            pt[hd] = 0;\n            continue;\n          }\n        }\n\n        if (that.h[hd].keywords_y) {\n          var matchesY = keywordMatches(holiday, that.h[hd].keywords_y);\n          if (matchesY && matchesY.length === that.h[hd].keywords_y.length) {\n            pt[hd] += matchesY.length;\n          } else {\n            pt[hd] = 0;\n            continue;\n          }\n        }\n\n        if (that.h[hd].keywords) {\n          var matches = keywordMatches(holiday, that.h[hd].keywords);\n          if (matches) {\n            pt[hd] += matches.length;\n          } else {\n            continue;\n          }\n        }\n      }\n\n      //console.log(pt); // Display scores\n\n      for (var w in pt) {\n        if (!pt[w] || !pt.hasOwnProperty(w)) { continue; }\n        if (!wn.length || pt[w] === pt[wn[0]]) { wn.push(w); continue; }\n        if (pt[w] > pt[wn[0]]) { wn = [w]; continue; }\n      }\n    }\n\n    if (!wn.length) { return false; }\n\n    if (parse !== false) {\n      for (var i = 0; i < wn.length; i++) {\n        var d = parseHoliday(self, that.h[wn[i]].date, adjust);\n        if (d) { obj[wn[i]] = d; }\n      }\n\n      if (Object.keys(obj).length) { return obj; }\n    } else {\n      return wn;\n    }\n\n    return false;\n  };\n\n  var findHolidays = function(self, holidays, adjust, parse, holidayObj) {\n    var h = [];\n    if (parse) { h = {}; }\n\n    holidays = arrayify(holidays);\n    if (!holidayObj) { holidayObj = moment.holidays.active; }\n\n    for (var i = 0; i < holidays.length; i++) {\n      var find = findHoliday(self, holidays[i], adjust, parse, holidayObj);\n\n      if (find) {\n        if (parse) {\n          h = merge(h, find);\n        } else {\n          h = h.concat(find);\n        }\n      }\n    }\n\n    return h;\n  };\n\n  var getAllHolidays = function(self, adjust) {\n    var h = moment.holidays.active;\n    var d = {};\n\n    for (var hd in h) {\n      if (!h.hasOwnProperty(hd)) { continue; }\n      if (that.td = parseHoliday(self, h[hd].date, adjust)) { d[hd] = that.td; }\n    }\n\n    return d;\n  };\n\n  var compileRegions = function(locale, regions) {\n    var h = moment.holidays[locale];\n    var o = {};\n\n    if (h) {\n      for (var i = 0; i < regions.length; i++) {\n        var r = regions[i].toLowerCase();\n        var l = moment.holidays[locale + '/' + r];\n        l = {};\n\n        for (var hd in h) {\n          if (!h.hasOwnProperty(hd)) { continue; }\n\n          var y = h[hd].regions || [];\n          var n = h[hd].regions_n || [];\n\n          if (y.length) { y.join().toLowerCase().split(); }\n          if (n.length) { n.join().toLowerCase().split(); }\n\n          if ((!y.length && !n.length) || (y.length && ~y.indexOf(r)) || (n.length && !~n.indexOf(r))) {\n            l[hd] = h[hd];\n          }\n        }\n\n        if (l) { o = merge(o, l); }\n      }\n    }\n\n    if (!Object.keys(o).length) { return false; }\n\n    return o;\n  };\n\n  var getLocale = function(locale) {\n    that.regions = locale.split('/');\n    locale = that.regions[0].toLowerCase().replace(' ', '_');\n    that.regions.shift();\n\n    // This code doesn't work with webpack, so it's commented out\n    // If you want locales, you should import them yourself separately\n\n    // if (!moment.holidays[locale]) {\n    //   try {\n    //     var path = './locale/';\n    //     if (__dirname.split('/').slice(-1).pop() == 'build') { path = '.' + path; }\n    //     require(path + locale);\n    //   } catch(e) { }\n    // }\n\n    if (moment.holidays[locale]) {\n      if (that.regions.length) { return compileRegions(locale, that.regions); }\n      return moment.holidays[locale];\n    }\n\n    return false;\n  };\n\n  var holidayLoop = function(self, count, forward, adjust) {\n    if (!count) { count = 1; }\n\n    var h = getAllHolidays(self, adjust);\n    var l = moment(self);\n    var y = self.year();\n    var w = [];\n\n    for (var i = 0; i < count; i++) {\n      var d = moment(l);\n\n      while (true) {\n        var b = false;\n\n        if (forward) {\n          d.add(1, 'day');\n        } else {\n          d.subtract(1, 'day');\n        }\n\n        if (d.year() !== y) {\n          h = getAllHolidays(d, adjust);\n          y = d.year();\n        }\n\n        if (!Object.keys(h).length) { b = true; break; }\n\n        for (var hd in h) {\n          if (!h.hasOwnProperty(hd)) { continue; }\n\n          var b2 = false;\n          var ha = arrayify(h[hd]);\n\n          for (var hi = 0; hi < ha.length; hi++) {\n            if (d.isSame(ha[hi], 'day')) {\n              w.push(ha[hi]);\n              l = moment(d);\n              b2 = true;\n              break;\n            }\n          }\n\n          if (b2) { b = true; break; }\n        }\n\n        if (b) { break; }\n      }\n    }\n\n    if (!w.length) { return false; }\n    if (w.length === 1) { return w[0]; }\n\n    return w;\n  };\n\n  var arrayify = function(arr) {\n    if (arr && arr.constructor !== Array) { return [arr]; }\n    return arr;\n  };\n\n  var findKey = function(find, obj) {\n    if (obj.constructor === Object) { obj = Object.keys(obj); }\n    for (var i = 0; i < obj.length; i++) {\n      if (find.toLowerCase() === obj[i].toLowerCase()) { return obj[i]; }\n    }\n    return false;\n  };\n\n  var merge = function(o1, o2) {\n    return Object.assign({}, o1, o2);\n  };\n\n  moment.fn.holiday = function(holidays, adjust) {\n    var h = moment.holidays.active;\n    var d = {};\n    var single = false;\n\n    if (!holidays) {\n      d = getAllHolidays(this, adjust);\n    } else {\n      if (holidays.constructor !== Array) {\n        single = true;\n        holidays = [holidays];\n      }\n\n\t  var td;\n      for (var i = 0; i < holidays.length; i++) {\n        if (td = findHoliday(this, holidays[i], adjust)) { d = Object.assign({}, d, td); }\n      }\n    }\n\n    var dKeys = Object.keys(d);\n\n    if (!dKeys.length) { return false; }\n    if (dKeys.length === 1 && single) { return d[dKeys[0]]; }\n\n    return d;\n  };\n\n  moment.fn.holidays = function(holidays, adjust) {\n    return this.holiday(holidays, adjust);\n  };\n\n  moment.fn.isHoliday = function(holidays, adjust) {\n    var h, returnTitle, hs = [];\n\n    if (holidays) {\n      holidays = arrayify(holidays);\n      h = this.holiday(holidays, adjust);\n      returnTitle = false;\n    } else {\n      h = getAllHolidays(this, adjust);\n      returnTitle = true;\n    }\n\n    if (!h) { return false; }\n\n    for (var hd in h) {\n      if (!h.hasOwnProperty(hd)) { continue; }\n\n      var ha = arrayify(h[hd]);\n\n      for (var hi = 0; hi < ha.length; hi++) {\n        if (this.isSame(ha[hi], 'day')) {\n          if (returnTitle) {\n            hs.push(hd);\n          } else {\n            return true;\n          }\n        }\n      }\n    }\n\n    if (hs.length) {\n      if (hs.length === 1) { return hs[0]; }\n      return hs;\n    }\n\n    return false;\n  };\n\n  moment.fn.previousHoliday = function(count, adjust) {\n    return holidayLoop(this, count, false, adjust);\n  };\n\n  moment.fn.previousHolidays = function(count, adjust) {\n    return this.previousHoliday(count, adjust);\n  };\n\n  moment.fn.nextHoliday = function(count, adjust) {\n    return holidayLoop(this, count, true, adjust);\n  };\n\n  moment.fn.nextHolidays = function(count, adjust) {\n    return this.nextHoliday(count, adjust);\n  };\n\n  moment.fn.holidaysBetween = function(date, adjust) {\n    if (!date) { date = new Date(); }\n    date = moment(date).subtract(1, 'day');\n\n    var h = getAllHolidays(this, adjust);\n    var d = moment(this);\n    var y = d.year();\n    var w = [];\n\n    for (var i = 0; i < date.diff(this, 'days'); i++) {\n      d.add(1, 'day');\n\n      if (d.year() !== y) {\n        h = getAllHolidays(d, adjust);\n        y = d.year();\n      }\n\n      if (!Object.keys(h).length) { break; }\n\n      for (var hd in h) {\n        var b = false;\n        var ha = arrayify(h[hd]);\n\n        for (var hi = 0; hi < ha.length; hi++) {\n          if (d.isSame(ha[hi], 'day')) {\n            w.push(ha[hi]);\n            b = true;\n            break;\n          }\n        }\n\n        if (b) { break; }\n      }\n    }\n\n    if (!w.length) { return false; }\n\n    return w;\n  };\n\n  moment.holidays = {\n    active: {},\n    active_last: {}\n  };\n\n  moment.modifyHolidays = {\n    set: function(holidays, specifics) {\n      var newH = {};\n\n      if (holidays.constructor === Array) {\n        var hs = [];\n\n        for (var i = 0; i < holidays.length; i++) {\n          var d = findHoliday(this, holidays[i], null, false);\n          if (d) { hs = hs.concat(d); }\n        }\n\n        if (hs.length) {\n          newH = merge(moment.holidays.active);\n\n          for (var hd in newH) {\n            if (!newH.hasOwnProperty(hd)) { continue; }\n            if (!~hs.indexOf(hd)) { delete(newH[hd]); }\n          }\n        }\n      } else if (typeof holidays === 'string') {\n        var locale = getLocale(holidays);\n\n        if (locale) {\n          if (specifics) {\n            var k = findHolidays(this, specifics, false, false, locale);\n            for (var i = 0; i < k.length; i++) { newH[k[i]] = merge(locale[k[i]]); }\n          } else {\n            newH = merge(locale);\n          }\n        }\n      } else {\n        newH = holidays;\n      }\n\n      if ((Object.keys(newH).length || holidays === newH) && !Object.is(moment.holidays.active, newH)) {\n        moment.holidays.active_last = merge(moment.holidays.active);\n        moment.holidays.active = newH;\n      }\n\n      return this;\n    },\n\n    add: function(holidays, specifics) {\n      if (typeof holidays === 'string') {\n        var locale = getLocale(holidays);\n        holidays = {};\n\n        if (locale) {\n          if (specifics) {\n            var k = findHolidays(this, specifics, false, false, locale);\n            for (var i = 0; i < k.length; i++) { holidays[k[i]] = merge(locale[k[i]]); }\n          } else {\n            holidays = locale;\n          }\n        }\n      }\n\n      if (Object.keys(holidays).length) {\n        moment.holidays.active_last = merge(moment.holidays.active);\n        moment.holidays.active = merge(moment.holidays.active, holidays);\n      }\n\n      return this;\n    },\n\n    remove: function(holidays) {\n      holidays = arrayify(holidays);\n\n      var find = findHolidays(this, holidays, false, false);\n      var newH = merge(moment.holidays.active);\n\n      if (find) {\n        for (var i = 0; i < find.length; i++) { delete(newH[find[i]]); }\n      }\n\n      if (!Object.is(moment.holidays.active, newH)) {\n        moment.holidays.active_last = merge(moment.holidays.active);\n        moment.holidays.active = newH;\n      }\n\n      return this;\n    },\n\n    undo: function() {\n      var c = merge(moment.holidays.active);\n      moment.holidays.active = merge(moment.holidays.active_last);\n      moment.holidays.active_last = c;\n      return this;\n    },\n\n    load: function(locales) {\n      locales = arrayify(locales);\n      for (var i = 0; i < locales.length; i++) { getLocale(locales[i]); }\n      return this;\n    },\n\n    extendParser: function(func) {\n      parserExtensions.push(func);\n      return this;\n    }\n  };\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n","//! moment-holiday.js locale configuration\n//! locale : United States\n//! author : Kodie Grantham : https://github.com/kodie\n\n(function() {\n  // For compatibility with webpack, we have a hard dependency on moment\n  var moment = require('moment');\n\n  moment.holidays.united_states = {\n    \"New Year's Day\": {\n      date: '1/1',\n      keywords_n: ['eve']\n    },\n    \"Martin Luther King Jr. Day\": {\n      date: '1/(1,3)',\n      keywords: ['mlk']\n    },\n    \"Valentine's Day\": {\n      date: '2/14'\n    },\n    \"Washington's Birthday\": {\n      date: '2/(1,3)',\n      keywords: ['george', 'president', 'day']\n    },\n    \"Saint Patrick's Day\": {\n      date: '3/17',\n      keywords: ['st[\\\\s\\\\.]', 'paddy', 'patty']\n    },\n    \"Good Friday\": {\n      date: 'easter-2',\n      keywords_y: ['good', 'friday']\n    },\n    \"Easter Sunday\": {\n      date: 'easter',\n      keywords_y: ['easter'],\n      keywords: ['sunday']\n    },\n    \"Memorial Day\": {\n      date: '5/(1,-1)'\n    },\n    \"Mother's Day\": {\n      date: '5/(0,2)',\n      keywords: ['mom']\n    },\n    \"Father's Day\": {\n      date: '6/(0,3)',\n      keywords: ['dad']\n    },\n    \"Independence Day\": {\n      date: '7/4',\n      keywords: ['4th', 'fourth', 'july']\n    },\n    \"Labor Day\": {\n      date: '9/(1,1)',\n      keywords: ['labour']\n    },\n    \"Columbus Day\": {\n      date: '10/(1,2)',\n      keywords: ['christopher']\n    },\n    \"Halloween\": {\n      date: '10/31'\n    },\n    \"Veteran's Day\": {\n      date: '11/11',\n      keywords: ['vet']\n    },\n    \"Thanksgiving Day\": {\n      date: '11/(4,4)',\n      keywords: ['thanks', 'turkey'],\n      keywords_n: ['after']\n    },\n    \"Day after Thanksgiving\": {\n      date: '11/(5,4)',\n      keywords: ['thanks', 'turkey'],\n      keywords_y: ['after']\n    },\n    \"Christmas Eve\": {\n      date: '12/24',\n      keywords: ['christ', 'x-?mas'],\n      keywords_y: ['eve']\n    },\n    \"Christmas Day\": {\n      date: '12/25',\n      keywords: ['christ', 'x-?mas'],\n      keywords_n: ['eve']\n    },\n    \"New Year's Eve\": {\n      date: '12/31',\n      keywords_y: ['year', 'eve']\n    }\n  };\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n","//! moment-holiday.js locale configuration\n//! locale : Easter Related Holidays\n//! author : Kodie Grantham : https://github.com/kodie\n\n(function() {\n  // For compatibility with webpack, we have a hard dependency on moment\n  var moment = require('moment');\n\n  moment.holidays.easter = {\n    \"Ash Wednesday\": {\n      date: 'easter-46'\n    },\n    \"Lent\": {\n      date: 'easter-46|easter-3'\n    },\n    \"Maundy Thursday\": {\n      date: 'easter-3',\n      keywords_y: ['maundy', 'thursday']\n    },\n    \"Good Friday\": {\n      date: 'easter-2',\n      keywords_y: ['good', 'friday']\n    },\n    \"Holy Saturday\": {\n      date: 'easter-1',\n      keywords_y: ['holy', 'saturday']\n    },\n    \"Easter Sunday\": {\n      date: 'easter',\n      keywords_y: ['easter'],\n      keywords: ['sunday']\n    },\n    \"Easter Monday\": {\n      date: 'easter+1',\n      keywords_y: ['easter', 'monday']\n    },\n    \"Ascension Day\": {\n      date: 'easter+39'\n    },\n    \"Pentecost Sunday\": {\n      date: 'easter+49',\n      keywords_y: ['pentecost'],\n      keywords: ['sunday']\n    },\n    \"Whit Monday\": {\n      date: 'easter+50',\n      keywords_y: ['whit'],\n      keywords: ['monday']\n    },\n    \"Corpus Christi\": {\n      date: 'easter+60',\n      keywords: ['feast']\n    }\n  };\n\n  var easter = function(y) {\n    var c = Math.floor(y / 100);\n    var n = y - 19 * Math.floor(y / 19);\n    var k = Math.floor((c - 17) / 25);\n    var i = c - Math.floor(c / 4) - Math.floor((c - k) / 3) + 19 * n + 15;\n    i = i - 30 * Math.floor((i / 30));\n    i = i - Math.floor(i / 28) * (1 - Math.floor(i / 28) * Math.floor(29 / (i + 1)) * Math.floor((21 - n) / 11));\n    var j = y + Math.floor(y / 4) + i + 2 - c + Math.floor(c / 4);\n    j = j - 7 * Math.floor(j / 7);\n    var l = i - j;\n    var m = 3 + Math.floor((l + 40) / 44);\n    var d = l + 28 - 31 * Math.floor(m / 4);\n    return moment([y, (m - 1), d]);\n  };\n\n  moment.modifyHolidays.extendParser(function(m, date){\n    if (~date.indexOf('easter')) {\n      var dates = date.split('|');\n      var ds = [];\n\n      for (var i = 0; i < dates.length; i++) {\n        if (dates[i].substring(0, 6) === 'easter') {\n          var e = easter(m.year());\n\n          if (dates[i].charAt(6) === '-') { e.subtract(dates[i].substring(7), 'days'); }\n          if (dates[i].charAt(6) === '+') { e.add(dates[i].substring(7), 'days'); }\n\n          if (dates.length === 1) { return e; }\n          ds.push(e.format('M/D'));\n        } else {\n          ds.push(dates[i]);\n        }\n      }\n\n      if (ds.length) { return ds.join('|'); }\n    }\n  });\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n"]}